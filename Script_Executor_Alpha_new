/*
-----------------------------------   Global Var   --------------------------------------------------
*/
Global PATH
Global dm_PATH
Global PATH_PIC
Global START	'label dm.dll is runing
Global SAW
Global HANDLE
Global Script_Name
Global LAST_POST_NUM
Global THIS_POST_NUM
Global SPRIT_LIMIT
Global SPRIT_INSANE
Global SPRIT_CRAZY
Global FINDPIC_TIMES
Global COMFIRM_TIMES
Global CIRCUS_SIZE
Global BIG_NUMBER1	'for <BreakUp> Label use
Global SYSTEM_TIME_START
Global SYSTEM_TIME_END
Global UNLIMIT_SWITCH
Global DELAY_SWITCH
Global BIG_TIME
Global TIME_FACTORY
dm_PATH="D:\HeuteNacht\anjian\damo\"
PATH = "D:\HeuteNacht\anjian\"
PATH_PIC = "D:\HeuteNacht\anjian\damo\Pic\"
START = 0
SAW = ""
HANDLE = 0			'
LAST_POST_NUM = 0	'SUM OF PAST Post number	
THIS_POST_NUM = 0	'THIS TIME post number Default=2
SPRIT_LIMIT = 3		'first change limit<-----------------------------[First]
SPRIT_INSANE = 5	'SECOND<------------------------------------------------------------[Second]
SPRIT_CRAZY = 7		'To label different runing model 3rd<-----------------------------------------------[Third]
FINDPIC_TIMES = 3	'Find Pic <?> times
COMFIRM_TIMES = 5	'Try <>times to comfirm I find it!
CIRCUS_SIZE = 14	'Dict's circle size
BIG_NUMBER1 = 200   '<BreakUp> Label use
BIG_TIME = 40000	'<------------------------setting the break time 40s
TIME_FACTORY = 0.2	'<-------------------------TIME *TIME_FACTORY=Delay_Time
'------------------------------------------------------------  Global Setting  ---------------------------------
UNLIMIT_SWITCH = 1	'Unlimit Blade Model ON <Global>
DELAY_SWITCH = 1	'Delay Model
'----------------------------------------------------------------------------------------------------------------
'############################################
Global KEYSTR_PAGEUP
Global KEYSTR_PAGEUP_ON
KEYSTR_PAGEUP = 33
KEYSTR_PAGEUP_ON = 0
Global KEYSTR_UP
Global KEYSTR_UP_ON
KEYSTR_UP = 38
KEYSTR_UP_ON = 0
'---------------------------------------------
Script_Name="HeuteNacht"

Dim Conf                   '创建：Conf属性字典  *注意：字典不能声明为全局变量*
Set Conf  = CreateObject("Scripting.Dictionary")
Conf.Add "PATH", "D:\HeuteNacht\anjian\"    '添加键和项目
Conf.Add "PATH_Conf_URL", "D:\HeuteNacht\anjian\Conf.txt"  
//MsgBox "Conf=" & Conf("PATH")

Dim Script_Dict                   '创建：属性字典
Set Script_Dict = CreateObject("Scripting.Dictionary")
Script_Dict.Add "choice_wide", "50"    '添加键和项目

/*
---------------------------Main Function--------------------------------------------------------------
######################################################################################################
*/
'--------------------------------
Rem HeuteNacht
Call Set_CONF(Script_Name)
Call Script_ExecutorII(Script_Name)
'--------------------------------------------------------------------------------
MsgBox "OUT"
'--------------------------------
Rem outside
If (KEYSTR_UP_ON = 0) Then 
	KeyPress KEYSTR_UP, 1
	Delay 1000
	KEYSTR_UP_ON = 1
End If
Err_Code = Code_Exe("719,503,FindPicEx,HeuteNacht_IGAI_Pic03.bmp,DM,773,529")
myArray = split(Err_Code, "|")
If (myArray(0) = "NoFound") Then 
	Goto outside
Else 
	KeyPress (KEYSTR_UP+1), 1 'turn down
	Delay 1000
	KEYSTR_UP_ON = 0
 	Call Code_Exe ("747,515,C,2080,DM")
 	Goto HeuteNacht
End If






/*
######################################################################################################
---------------------------------------------- Set CONF ----------------------------------------------

       Wrong!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

-------------------------------------------------------------------------------------------------
*/
Function Set_CONF(File_Name)								'---------按键精灵未定义变量为全局变量！！！！！！
'claim:											'---------经常因此发生未知BUG!!!!!!!!!!!!!!!!!!!
	Dim Read_Text, Codes, URL
'initial:
	Text = ""
'core:
	URL = PATH & File_Name & "_Conf.txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then 
		Read_Text = File_Read(File_Name&"_Conf")
		//MsgBox "Set_CONF:read ="&Read_Text
		Codes = split(Read_Text, "@")
		For i = 0 To UBound(Codes)
			Text = split(Codes(i), "=") 
			Select Case Text(0)
				Case "Script_Name"
					Script_Name = Text(1)
				Case "LAST_POST_NUM"
					LAST_POST_NUM = Text(1)
				Case Else
					LAST_POST_NUM = Text(1)
			End Select
		Next
	Else 
		Text="Script_Name=HeuteNacht"&Chr(13)&Chr(10)&"LAST_POST_NUM=0"
		Call File_SaveEx(Script_Name&"_Conf", Text, "Rewrite")
	End If
	//MsgBox "LAST_POST_NUM = "&LAST_POST_NUM
'return:
Set_CONF = "CONF"
End Function

Function Rewrite_CONF(Script_Name)
'claim:
	Dim String_Data
'initial:
'core:
	THIS_POST_NUM = 2	'Default =2
	String_Data = "Script_Name=" & Script_Name & Chr(13) & Chr(10)
	sum = LAST_POST_NUM + THIS_POST_NUM
'-----------------------------------------------------
	If (sum >CIRCUS_SIZE) Then 						'|##########
		sum = 0										'|# Modify #
	End If											'|##########
'------------------------------------------------------
	String_Data = String_Data & "LAST_POST_NUM=" & sum
	//MsgBox "sum="&sum
	Call File_SaveEx(Script_Name&"_Conf", String_Data, "Rewrite")
'return:
Rewrite_CONF = "REWRITE_CONF"
End Function
'---------------------------------------------------------------------------------------------------------
Function Script_ExecutorSQ(File_Name)
'claim:
	Dim Codes_Text, Codes, Code_Num, FindPic_Num, Codes_Len
	Dim FindPic_Array, FindPic_Len
	Dim i, Err_Code, GoAhead,j,k
	Dim sum
	Dim Memory_DNA, Memory_DNA_Address
	Dim Text,Text_List

'initial:
'------------------------------------  File Read Part  -------------------------------------------
	Codes_Text = File_ReadEx(File_Name)	'<-------------- Main Codes								'|
	Codes = split(Codes_Text, "@")																'|
	Codes_Len = UBound(Codes)
	Execute_Way = Codes_Select(Codes, "FindPic")
	FindPic_Array = split(Execute_Way, ",")
	FindPic_Len = UBound(FindPic_Array)

'------------------------------------------------------------------------------------------------
	i = 0
	sum = 0
	Text = ""
	Text_List = ""
	DNA = "1|0"							'Must be DNA STRUCTURE!!! <<--------------------START POINT<< DNA FIRST ONE---------------
	Memory_DNA = i & "|"				'I Remember Nothing.
	Memory_DNA_Address = i
'core:	
	'--------------------------------Find----------------
	While (i < FindPic_Len + 1)
		Err_Code = Code_Exe(Codes(FindPic_Array(i)))		'Code Execute
		GoAhead = AI_WhereIsII(Codes,Memory_DNA, Err_Code, DNA)
		If (GoAhead <> 0) Then 				
			If (sum = 0) Then 
				Text = i
				Text_List = FindPic_Array(i)
			Else 
				Text = Text & "," & i
				Text_List = Text_List & "," & FindPic_Array(i)
			End If
			sum = sum + 1
		End If
		i = i + 1
	Wend
	'--------------------------------Action----------
	Call Action(Codes,Text,Text_List)
'return:
	Script_ExecutorSQ = "Script|SQ"
End Function
Function Action(Codes,Text,Text_List)
	Dim myArray, myLen
	Dim Text_List_Array
	Dim Model
	myArray = split(Text, ",")
	myLen = UBound(myArray)
	Text_List_Array = split(Text_List)
	If (myLen = 0) Then 
		Model = myArray(0)
		Select Case Model
			Case "fuck"
		/*
			Case 1, "0", "黑屏死机"
			    MsgBox "黑屏"
			    Call Code_Exe("1225,682,C,1123")
			    MoveTo 1059, 400
			    LeftClick 1
			    Delay 100
			    LeftDown 1
			    MoveTo 1053, 128
			    LeftUp 1
			  */
		//	Case 4, "4", "程序无响应"
		//		MsgBox "无响应"
			Case Else
				Call Code_Exe(Text_List_Array(int(Model) + 1))
				
		End Select
	End If
	
End Function
/*

-------------------------------------------- Script_ExecutorII  ------------------------------------------
			AI >> 
__________________________________________________________________________________________________________
*/
Function Script_ExecutorII(File_Name)
'claim:
	Dim Codes_Text, Codes, Code_Num, FindPic_Num, Codes_Len
	Dim i, Err_Code, GoAhead,j,k
	Dim Sprit_Value
	Dim Memory_DNA, Memory_DNA_Address
	Dim Code_Label		'Label Codeline:with different label,such as,<Unlimit>:Aways Running Sprit_Value can't increase.
	Dim BreakUp_Value
	Dim Code_Inserted	'Inserted codeline
	Dim Time_Label, sTime1, sTime2, Time_Record, sTime_Delay,Time_Record_Num
	Dim Err_Array	'use to analysis
	Dim Err_Main, Err_Next, Err_Message
	Dim IGAI_Text, Codes_IGAI
	Dim Delay_Text, Codes_Delay, IsDelayFileExist
'initial:
	BreakUp_Value = 0
	Time_Label = 0
'------------------------------------  File Read Part  -------------------------------------------
	Codes_Text = File_ReadEx(File_Name)	'<-------------- Main Codes								'|
	Codes = split(Codes_Text, "@")																'|
	Codes_Len = UBound(Codes)
	'.......................................  Dynamic Define  ..................................'|
	Dim Delay_Array(100)
	For i = 0 To UBound(Codes)
		 Delay_Array(i) = 0
	Next
	'...........................................................................................'|
	IGAI_Text = File_ReadEx(File_Name&"_IGAI") '<------------- IGAI Codes						'|	
	Codes_IGAI = split(IGAI_Text, "@")															'|
	Delay_Text = File_ReadEx(File_Name&"_Delay") '<------------- Delay Codes					'|	
	If (Delay_Text <> "") Then 
		IsDelayFileExist = True
	Else 																						'|
		IsDelayFileExist = False
		DELAY_SWITCH = 0				'<----------------Auto Switch Model						'|
	End If
	Codes_Delay = split(Delay_Text, "@")														'|
	For i = 0 To UBound(Codes_Delay)	'Delay Time Deal with
		myArray = split(Codes_Delay(i), ",")													'|
		If (int(myArray(1)) < 2000) Then 
			Delay_Array(int(myArray(0))) = int(myArray(1)) + 1000
		Else 																					'|
			Delay_Array(int(myArray(0))) = int(myArray(1))+int(myArray(1)*TIME_FACTORY)
		End If
																								'|
	Next
'------------------------------------------------------------------------------------------------
	i = 0
	Code_Label = "Default"
	Sprit_Value = 0						' AI标记代码重复运行次数,防止死循环
	DNA = "1|0"							'Must be DNA STRUCTURE!!! <<--------------------START POINT<< DNA FIRST ONE---------------
	Memory_DNA = i & "|"				'I Remember Nothing.
	Memory_DNA_Address = i
	Time_Record = ""
	sTime_Delay = 0
	Time_Record_Num = 0
	sTime1 = Plugin.Sys.GetTime()		'Initial The Time.
'core:	
	While (i < UBound(Codes) + 1)
		'Code_Inserted = Code_Insert_Codes(Codes(i), Codes_IGAI)
		//MsgBox "Code_Inserted("&i&")="&Code_Inserted
	'----------------------------Code Label Get ----------------------------------
		pos = InStr(Codes(i), "<Unlimit>")										'|#######
		If (pos > 0) Then 														'|Choice#  Add Code_Label
			Code_Label = "Unlimit"												'|#######
		End If																	'|
		pos = InStr(Codes(i), "<BreakUp>")										'|#######
		If (pos > 0) Then 														'|Choice#  Add Code_Label SPEED UP THE SP increase
			Code_Label = "BreakUp"												'|#######
		End If																	'|
		pos = InStr(Codes(i), "<Quick>")										'|#######
		If (pos > 0) Then 														'|Choice#  Add Code_Label SPEED UP THE SP increase
			Code_Label = "Quick"												'|#######
		End If																	'|
	'-----------------------------------------------------------------------------
		Err_Code = Code_Exe(Codes(i))		'Code Execute
	'--------------------------------------------  Time Record ----------------------------------------------------
		Err_Array = split(Err_Code, "|")	'Analysis															 '|
		Err_Main = Err_Array(0)																					 '|
		Err_Next = Err_Array(1)																					 '|
		Err_Message = Err_Array(2)																				 '|	
		If (IsDelayFileExist) Then 
					'<---------------- Do Something	: Record the First Failure sTime1							 '|
				If (Err_Main = "NoFound")and(Time_Label = 0) Then 												 '|
					sTime1 = Plugin.Sys.GetTime()																 '|	
					Time_Label = 1
				End If
				If (Err_Main = "NoFound")and(Time_Label = 1) Then 												 '|
					sTime2 = Plugin.Sys.GetTime()																 '|	
					sTime_Delay = sTime2 - sTime1
				End If
				If (Err_Main = "Found")and(Time_Label = 1) Then 												 '|															 '|	
					Time_Label = 0
				End If																							 '|
			Else 	'<--------------------- To Create A DelayFile
				If (Err_Main = "Action") Then '<---------------------Record the time1 of Last  Action			 '|
					sTime1 = Plugin.Sys.GetTime()																 '|
					Time_Label = 1
				End If																							 '|
				If (Err_Main = "Found") and (Time_Lavel = 0)and(i = 0) Then '<------------ i=0 
					sTime2 = Plugin.Sys.GetTime()
					sTime_Delay = sTime2 - sTime1
					Time_Record = Time_Record & i & "," & sTime_Delay & Chr(13) & Chr(10)						 '|
					Time_Record_Num = Time_Record_Num + 1
					Time_Label = 0
				End If
				If (Err_Main = "Found")and(Time_Label = 1) Then 												 '|
					sTime2 = Plugin.Sys.GetTime()																 '|	
					sTime_Delay = sTime2 - sTime1
					Time_Record = Time_Record & i & "," & sTime_Delay & Chr(13) & Chr(10)						 '|
					//MsgBox "Delay["&Time_Record_Num&"] is:"&sTime_Delay
			
					Time_Record_Num = Time_Record_Num + 1
					Time_Label = 0
				End If																							 '|
				Call File_SaveEx(File_Name&"_Delay", Time_Record, "Rewrite")									 '|	
			End If
		'--------------------------------------------------------------------------------------------------------------
		GoAhead = AI_WhereIsII(Codes,Memory_DNA, Err_Code, DNA)
		If (GoAhead = 0) Then 				'如果不前进=重复次数
		'------------------------------------------------------------------------------------------------
			If (Code_Label = "Default") Then 															'|<<add
				Sprit_Value = Sprit_Value + 1															'|
				DNA = DNA_Control(DNA, "Update", Sprit_Value)											'|Refresh the DNA
			ElseIf (Code_Label = "Unlimit") Then														'|<Unlimit>label for SP aways eq 0
			 	Sprit_Value = 0																			'|
				DNA = DNA_Control(DNA, "Update", Sprit_Value)											'|Refresh the DNA
			ElseIf (Code_Label = "BreakUp") Then														'|<Unlimit>label for SP aways eq 0
				If (BreakUp_Value > BIG_NUMBER1) Then 													'|
					Sprit_Value = Sprit_Value + 1														'|
					DNA = DNA_Control(DNA, "Update", Sprit_Value)										'|Refresh the DNA
					BreakUp_Value = 0																	'|
				Else 																					'|
					BreakUp_Value = BreakUp_Value + 1													'|
				End If																					'|
			Else '----------------------- Former Code----------------------------------------------------
				Sprit_Value = Sprit_Value + 1
				DNA = DNA_Control(DNA, "Update", Sprit_Value)	'Refresh the DNA
			End If
		'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  HENTAI SWITCH  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
			If (UNLIMIT_SWITCH = 1) Then 																		 '$
				If (DELAY_SWITCH = 1) Then 																		 '$
					If (sTime_Delay < Delay_Array(i)) Then 
						Sprit_Value = 0																			 '$
						DNA = DNA_Control(DNA, "Update", Sprit_Value)
					Else'<--------------------------------- Deal with------------
						//Call Script_ExecutorSQ(File_Name&"_IGAI")
						If (KEYSTR_PAGEUP_ON = 0) Then 
							KeyPress KEYSTR_PAGEUP,1
							KEYSTR_PAGEUP = 1
						End If
						'<-------------------------------------------------------
						Sprit_Value = 0																			 '$
						DNA = DNA_Control(DNA, "Update", Sprit_Value)
						'<-------------------------------------------------------									 													 '$
					End If																						 '$
				Else 																							 '$
					Sprit_Value = 0																				 '$
					DNA = DNA_Control(DNA, "Update", Sprit_Value)	
				End If
																 											   	 '$
			End If																								 '$
		'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$	
			
		'-------------------------------------------------------------------------------------------------
		Else 								'如果不前进=重复次数
			If (Sprit_Value >= SPRIT_LIMIT) Then 'AI Search:GoAhead Try it
				Code_Num = Codes_Select(Codes, "Next|" & i + GoAhead)
				For j = i + GoAhead To int(Code_Num) - 1
					Err_Code = Code_Exe(Codes(j))
				Next
			'-------------------------------------until here is right!!!!!!!!!!!!!!!!!!!!
				Err_Code = Code_Exe(Codes(Code_Num))
				GoAhead = AI_WhereIsII(Codes, Memory_DNA, Err_Code, "0|0")
				k = 0
				While (GoAhead = 0)and(k<COMFIRM_TIMES)									'Find COMFIRM_TIMES Times to comfirm
					Err_Code = Code_Exe(Codes(Code_Num))
					GoAhead = AI_WhereIsII(Codes, Memory_DNA, Err_Code, "0|0")
					k = k + 1
				Wend
				If (k = COMFIRM_TIMES) Then 'Go Wrong>>Remember it.
					Memory_DNA = DNA_Control(Memory_DNA, "Replace", "Top|" & i)
					FindPic_Num = Codes_Select(Codes, "BisHierBildNum|" & Code_Num)
					Memory_DNA = DNA_Control(Memory_DNA, "Insert", FindPic_Num)
					i = i
				Else 			 'Comfirm!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					i = Code_Num
					Memory_DNA = i & "|"
					Sprit_Value = 0
					DNA = DNA_Control(DNA, "Update", Sprit_Value)	'Refresh the DNA
				End If
			ElseIf (Sprit_Value >= SPRIT_INSANE) Then' Go Insane:Maybe Can't entry Here CAUSE THEIR 
				
			Else 'normal GoAhead
			'------------------  多线程  --------------------------
				If (KEYSTR_PAGEUP = 1) Then 
					KeyPress KEYSTR_PAGEUP+2,1 	'shutdown
					KEYSTR_PAGEUP = 0
				End If
			'-----------------------------------------------------
				i = i + GoAhead
			End If	
		End If
	Wend
'return:
	Script_ExecutorII = "Script"
End Function

/*
---------------------------------------------- AI_WhereIsII ----------------------------------------------
*/
Function AI_WhereIsII(Codes, Memory_DNA, Err_String, DNA)	'|Codes字符串数组
'claim:											'|Line表示执行到第几行,或者标记谁在递归！！！
	Dim last_Code, i, next_Code			'|Line 为数字时,表示来自主程序或递归使用
	Dim pos, Still, GoAhead 					'|Line 为特定字符串时,说明来自自身AI递归:Dangerous!!!
	Dim Err_Array, AI_Action
	Dim Inserted_Code
	Dim Execute_Way
	Dim Err_Code
	Dim myArray
	Dim AI_Depth
	Dim Line
'initial:
	GoAhead = 0
	i = 0
	Line = DNA_Control(Memory_DNA, "Read", "Key")
	Err_Array = split(Err_String, "|")
	Err_Main = Err_Array(0)
	Err_Next = Err_Array(1)
	Err_Message = Err_Array(2)
	Sprit_Value = int(DNA_Control(DNA, "Read", "KeyValue"))
	AI_Depth = DNA_Control(DNA, "Read", "Key")
	//MessageBox "AI_W:DNA="&DNA&Chr(13)&Chr(10)&"SP="&Sprit_Value
	//Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ Turing Testing:AI_Depth="&AI_Depth&" ]", "94FFD3")
'core:
	Select Case Err_Main
		Case "NoFound" 								
			//Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ Turing Testing>> SP:" & Split_Value & "|Err:"&Err_String&"|Line:"&Line& "|GB:"& GoBack&"  ]", "9400D3")
			GoAhead = 0	
		   'Model:AI智能实现方式:
		  Rem AI_WhereIsII_Scan_Model '<------------------------------Scan the whole Running codes to determine the position
		  
			If (AI_Depth=1)and(Sprit_Value >= SPRIT_LIMIT)and(Sprit_Value<SPRIT_INSANE) Then 			'if You are in AI_Depth 1 and Insane THEN Go in Deeper Level.
				If (Sprit_Value = SPRIT_LIMIT) Then 
		  			Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ AI FindAll>>AI is Awake I ]", "9400D3")
		  		End If
//			    MessageBox "AI_W:Search>>"
				Execute_Way = Codes_Select(Codes, "FindPic")
				Execute_DNA = "FindPic" & "|" & Execute_Way						'DNA DATA CREATE
//				Err_Code = Code_ExeEx(Codes, Execute_Way, "FindAll", Line, 0)
				//	MessageBox "AI->C->入口"
				Err_Code = Code_ExeEx(Codes, Execute_DNA, Memory_DNA,DNA)		
				//MessageBox "AI->C->出口"
//				MsgBox "Code_ExeEx执行结果："&Err_Code
				If (Err_Code = "None") Then 
					GoAhead = 0	
				ElseIf (int(Err_Code) <> int(Line))Then
					GoAhead = int(Err_Code) - int(Line)
					Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ AI:Depth2>>Found :GoAhead="&GoAhead&"]", "9400D3")
					Delay 3000
				Else 	'IF  Find the sameway Goahead,and cool down.
					GoAhead = 1
					Sprit_Value = 0
					DNA = DNA_Control(DNA, "Update", Sprit_Value)			'Alle is beginen
				//	MsgBox "?????????????????"
				End If
			End If
		'Model:FindAll
		  Rem AI_WhereIsII_IGAI_Model				'<-----------------------------Scan the IGAI codes to  detremine the IGAI situation
		  
		  	If (AI_Depth=1)and(Sprit_Value >= SPRIT_INSANE)and(Sprit_Value < SPRIT_CRAZY) Then 'If You are already AI_Depth2 Go to Three
//		  		MsgBox "AI_W:AI Range"
		  		IGAI_Text = File_ReadEx("FGO_IGAI")		'读取真经......................................................
				Codes_IGAI = split(IGAI_Text, "@")
				Execute_Way = Codes_Select(Codes_IGAI, "FindPic")			'AI找图代码读入
				Execute_DNA = "FindPic" & "|" & Execute_Way						'DNA DATA CREATE
			'	Execute_Way_Action = Codes_Select(Codes_IGAI, "FindPic")	'动作代码读入
				Err_Code = Code_ExeEx(Codes, Execute_DNA, Memory_DNA, DNA)		'IGAI 模式:找32次找不到就返回"None"
				If (Err_Code = "None") Then 
					//MsgBox "Nofound"
					GoAhead = 0
				Else 
					If (UBound(myArray) = 0) Then 		'Find one ,Great!
						Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "Definitely!!!AI know where am I>>IGAI:" & myArray(0), "9400D3")
						Delay 2000
						'AI ACTION
						Err_Code = Code_Exe(Codes(int(Err_Code)))			'默认IGI文件为F-A F-A 模式,动作在下一行
						GoAhead = 0
						Sprit_Value = 0
						DNA = DNA_Control(DNA, "Update", Sprit_Value)
					End If
				End If
		  	End If
		  //	Call DNA_Control(DNA, "Show", "Key")
		Rem AI_WhereIsII_Action_Model '<-------------------------------------------- Find Something and Action THEN Return
		
			If (Sprit_Value >= SPRIT_CRAZY) Then 
						Sprit_Value = 0
						DNA = DNA_Control(DNA, "Update", Sprit_Value)			'Alle is beginen
			End If
	'-------------------------------------------------------------  <NoFound Part:AI>  -----------------------------------------------------------	
		Case "Found"
			Select Case Err_Next
				Case "Pics"
					GoAhead = 1
				Case "Pic"
					GoAhead = 1
				Case "Dynamic"
					GoAhead = 1
				Case "OR"
					//MessageBox "Find the pic skip>>"&Err_Message&"Step"
					GoAhead = int(Err_Message) + 1
				Case Else
					GoAhead = 1
			End Select
		Case "Action"
			Select Case Err_Next
				Case "L"
					GoAhead = 1
				Case "D"
					GoAhead = 1
				Case "R"
					GoAhead = 1
				Case "P","Post"
					GoAhead = 1
				Case Else
					GoAhead = 1
			End Select
		Case Else				'<-------------------------------Default =1  GoAhead=1 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
			GoAhead = 1
	End Select
			
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ Turing Testing>> GoAhead="&GoAhead&"  ]" & GoBack, "0000FF")
	AI_WhereIsII = GoAhead 
End Function
/*
----------------------------------------- AI: Code_Insert_File  ------------------------------------------------------
Insert File should have a Form F-A F-A F-A   FindPic -- Action
-----------------------------------------------------------------------------------------------------------------
*/
Function Code_Insert_Codes(codeline, Codes)
'claim:
	Dim Insert_Num
	Dim Return_Text
	Dim i, Len
'initial:
	Len = UBound(Codes) + 1
	Insert_Num = int(Len / 2)
	//MsgBox "Insert_Num="&Insert_Num
	i = 0
'core:
	Return_Text = codeline
	For i = 0 To Insert_Num - 1
		'Action_Code(i) = Codes(i * 2 + 1)
		Return_Text = mySplitEx(Return_Text, ",", "IIXIXII", Codes(i * 2))
	Next
'Return:
   // MsgBox "Code_Insert_Codes="&Return_Text
	Code_Insert_Codes = Return_Text
End Function
/*
--------------------------------------- Code_Insert_Line ----------------------------------------------
*/
Function Code_Insert_Line(codeline, Insert_Line)
'claim:
	Dim i
	Dim Return_Text
'initial:
	i = 0
	Return_Text = ""
'core:
	Return_Text = mySplitEx(codeline, ",", "IIXIXII", Insert_Line)
'Return:
	Code_Insert_Line = Return_Text
	//MsgBox "Code_Insert_File="&Code_Insert_Line
End Function
/*
----------------------------------------- AI: Code_Select  ------------------------------------------------------
Code_Select Return: pos_string="2,3,5,7,8,20" 表示选定代码类型位置分别为 2,3,5,7,8,20
-----------------------------------------------------------------------------------------------------------------
*/
Function Codes_Select(Codes, Model_DNA)		'Codes=split(Read_Text,"@") 属于字符数组|eg.Codes(i)="12,12,C,1234,DM"
'claim:
	Dim codeline						'codeline=split(Codes(i),",")
	Dim Tp	'搜索指针
	Dim pos	'搜到的位置
	Dim sum	'计数器
	Dim Err
	Dim Model, start
	Dim i
'initial:
	i = 0
	sum = 0
	Tp = ""
	Model = DNA_Control(Model_DNA, "Read", "Name")
//	MsgBox "Model="&Model
	start = int(DNA_Control(Model_DNA, "Read", "End"))
//	MsgBox "strat="&start
'Trans:
	Select Case Model
		Case "FindPic", "FindPicEx", "FindPicEx_OR","F"
			Tp = "FindPic"
			Goto Codes_Select_FindPic_Model
		Case "Action", "Else"
			Tp = "FindPic"
			Goto Codes_Select_Action_Model
		Case "Next", "NextFindPic"
			Tp = "FindPic"
			Goto Codes_Select_Next_Model
		Case "BisHierBildNum","BHBN"			'suppose Model_DNA have a num body
			Tp = "FindPic"
			Goto Codes_BisHierBildnNum__Model
	End Select
'Model:FindPic
Rem Codes_Select_FindPic_Model
	Text = ""
	sum = 0
	For i = 0 To UBound(Codes)
		If (Codes(i) <> "") Then 
			pos = InStr(Codes(i), Tp)
			If (pos ="Null") Then 
			//	MsgBox "Err:Codes(i) is Unknow"
			ElseIf (pos = 0) Then
				'NoFound
			ElseIf (pos > 0) Then
				If (sum = 0) Then 
					Text = i
				Else 
					Text = Text & "," & i
				End If
				sum = sum + 1
			Else 
				//MsgBox "Err:InStrFunction is Wrong?"
			End If
		End If	
	Next
	Err = Text
	Goto Codes_Select_Return
'Model:Action
Rem Codes_Select_Action_Model
	Text = ""
	sum = 0
	For i = 0 To UBound(Codes)
		If (Codes(i) <> "") Then 
			pos = InStr(Codes(i), Tp)
			pos1 = InStr(Codes(i), ",")
			If (pos ="Null") Then 
				//MsgBox "Err:Codes(i) is Unknow"
			ElseIf (pos = 0) Then
				'NoFound
				If (pos1 > 0) Then 	'找逗号,确认代码不空,双保险
					If (sum = 0) Then 
					Text = i
				Else 
					Text = Text & "," & i
				End If
				sum = sum + 1
				End If
				
			ElseIf (pos > 0) Then
			/*
			//Found
				If (sum = 0) Then 
					Text = i
				Else 
					Text = Text & "," & i
				End If
				sum = sum + 1
			*/
			Else 
				//MsgBox "Err:InStrFunction is Wrong?"
			End If
		End If	
	Next
	Err = Text
	Goto Codes_Select_Return
'Model:Next
Rem Codes_Select_Next_Model
	For i = start+1 To UBound(Codes)
		If (Codes(i) <> "") Then 
			pos = InStr(Codes(i), Tp)
			If (pos ="Null") Then 
			//	MsgBox "Err:Codes(i) is Unknow"
			ElseIf (pos = 0) Then
				'NoFound
			ElseIf (pos > 0) Then
				Err = i
//				MsgBox "Err="&Err
				Goto Codes_Select_Return
			Else 
				//MsgBox "Err:InStrFunction is Wrong?"
			End If
		End If	
	Next
	Goto Codes_Select_Return
Rem Codes_BisHierBildnNum__Model
    sum = 0
	For i = 0 To start
		If (Codes(i) <> "") Then 
			pos = InStr(Codes(i), Tp)
			If (pos ="Null") Then 
			//	MsgBox "Err:Codes(i) is Unknow"
			ElseIf (pos = 0) Then
				'NoFound
			ElseIf (pos > 0) Then
				sum = sum + 1
			Else 
				//MsgBox "Err:InStrFunction is Wrong?"
			End If
		End If	
	Next
	Err = sum
//	MsgBox "FindPic Num="&Err
	Goto Codes_Select_Return
'Return:
Rem Codes_Select_Return
	Codes_Select = Err
End Function
/*
------------------------------------------------------------------------------------------------------------------
                Code_ExeEx(Codes,Model): 多功能代码块执行器
------------------------------------------------------------------------------------------------------------------
*/
Function Code_ExeEx(Codes, Execute_DNA, Memory_DNA,DNA)	'|Execute_Way="Line|2,3,5,6,7"表示Line位置|需要执行的代码行
	Dim Err										'|Model="FindAll":表示尝试执行所有以上代码,返回有执行结果的行 
	Dim myArray,Yes					            '|eg.5,7表示5和7行有结果													[TYPE]
	Dim Err_Code
	Dim sum										'|Memory_DNA: Main_Code_Line|2,3,4,5 <Have Tryed codes number>			<<Virus
	Dim GoAhead
	Dim Sprit_Value								'|Execute_DNA:Execute_Model|2,3,4,5,6,7,8 <Try to Run the code's Num>	<<Virus
	Dim Execute_Way, Line						'|DNA: Thinking_Level|3,4,5 <spirit value> 								<<DNA
	Dim CE_Codes, CE_Codes_Len
	Dim Find_Start
	Dim Brain
	Dim Memories, Memories_Len									'Suppose Memories_Len<=CE_Codes_Len
	Dim i,j,k,pos
'initial
	sum = 0
	Err = "None"												'Zero mean NoFound
	Sprit_Value = 0
	Model = DNA_Control(Execute_DNA, "Read", "Name")
	Execute_Way = DNA_Control(Execute_DNA, "Read", "Body")
	DNA = DNA_Control(DNA, "Add", Sprit_Value)
	CE_Codes = split(Execute_Way, ",")
	CE_Codes_Len = int(UBound(CE_Codes))
	Line = DNA_Control(Memory_DNA, "Read", "Key")	'Line is main exe codeline
	Brain = DNA_Control(Memory_DNA, "Read", "Body")
	Memories = split(Brain, ",")
	
	//MsgBox "CE_Codes=" & CE_Codes
	//MsgBox "Execute_Way="&Execute_Way
	//MsgBox "ExeEX:Model="&Model
'Trans
	Select Case Model
		Case "FindAll", "Find_All", "findall"
			Find_Start = Line
			Goto Code_ExeEx_FindAll_Model
		Case "IGAI"
			Goto Code_ExeEx_IGAI_Model
		Case "Center"
			Goto Code_ExeEx_Center_Model
		Case Else
			Find_Start = Line
			Code_ExeEx_FindAll_Model
	End Select
'这里的For循环和 递归冲突-----------------------------------------------------------------------------------------------------------------------
Rem Code_ExeEx_FindAll_Model								'Only Find All the Pics One Time
	For i = 0 To CE_Codes_Len
	
	'------------------------------------------------- Choice_Model :First Try Line Again --------------------------------
		Err_Code = Code_Exe(Codes(Line))																				'|
		GoAhead = AI_WhereIsII(Codes, Model, Err_Code, DNA)																'|
		If (GoAhead > 0) Then 							'IF Find it,Go out of the loops									'|
			Yes = DNA_Control(Memory_DNA, "Remember", CE_Codes(i))'I Remember You!!!!!!!!!!!!!!!!!!!!!!!!!				'|#################
			If (Yes) Then 																								'|#  Choice Model #
			Else 																										'|#################
				Err = Line          																					'|
				Goto Code_ExeEx_Return																					'|
			End If																										'|
		End If																											'|
	'---------------------------------------------------------------------------------------------------------------------
//		MessageBox "C->AI->入口f"&i
		// MsgBox "i="&i
	'----------------------------------------------------- Second>>Try another codeline-----------------------------------
		Err_Code = Code_Exe(Codes(CE_Codes(i)))
		//If (i = int((Sprit_Value+1)*3)) Then 
//		MessageBox "C->AI->入口ff"&i
		//End If
		GoAhead = AI_WhereIsII(Codes, Model, Err_Code, DNA)
		//MsgBox "GoAhead="&GoAhead
		//	MessageBox "C->AI->出口"
		If (GoAhead > 0) Then 							'IF Find it,Go out of the loops
			Yes = DNA_Control(Memory_DNA, "Remember", CE_Codes(i))'I Remember You!!!!!!!!!!!!!!!!!!!!!!!!!
//			MsgBox "CE_Codes(i)=" & CE_Codes(i)
//			MsgBox "Yes="&Yes
			If (Yes) Then 
//				MsgBox "I Remember You!"
			Else 
				Err = int(CE_Codes(i))
//				MsgBox "CODES=" & Codes(CE_Codes(i))
				Goto Code_ExeEx_Return
			End If
		End If
	'----------------------------------------------------------------------------------------------------------------------
		
	Next
	Sprit_Value = Sprit_Value + 1
	DNA = DNA_Control(DNA, "ShowValue", "")
	DNA = DNA_Control(DNA, "Update", Sprit_Value)
	DNA = DNA_Control(DNA, "ShowValue", "")
	Goto Code_ExeEx_FindAll_Model
	
Rem Code_ExeEx_IGAI_Model
	Goto Code_ExeEx_Return
'Model:Center
Rem Code_ExeEx_Center_Model
	Goto Code_ExeEx_Return
'这里的For循环和 递归冲突-----------------------------------------------------------------------------------------------------------------------
Rem Code_ExeEx_Return
	Code_ExeEx = Err							'return a number of CodeLine
End Function
/*
-----------------------------------------------------------------------
                File_Read split the Text with "@"
-----------------------------------------------------------------------
*/
Function File_ReadEx(File_Name)
'claim:
	Dim i, Text, Get_Text
	Dim URL, Num, j
'initial:	
	i = 0
	Get_Text = ""
	Num=""
'core:	
Rem File_Reading
	URL = PATH & File_Name & Num & ".txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then 	'<-------------------------------If File Exist <READ IT>-----------------
		//MessageBox "URL=" & URL
		Text = "T"
		f = Plugin.File.OpenFile(URL)
		If (i = 0) Then 
			Text = Plugin.File.ReadLine(f)
			Get_Text = Text
		End If
		While Text<>""
			Text = Plugin.File.ReadLine(f)
			If (Text <> chr(13))and(Text<>chr(10))and(Text<>"") Then 
				Get_Text = Get_Text & "@" & Text
			End If
		Wend
		Plugin.File.CloseFile f
		//MsgBox "Get_Text"&i&"="&Get_Text
	End If
	j = int(i / 10)
	Num = Cstr(j) & Cstr(i)
	i = i + 1
	If (i<101) Then
		Goto File_Reading
	Else 
		Goto File_ReadEx_Ending
	End If
'return:
Rem File_ReadEx_Ending
	//MsgBox "Get_Text="&Get_Text
	File_ReadEx = Get_Text
End Function


Function File_Read(File_Name)
'claim:
	Dim Text, Get_Text
	Dim URL
'initial:	
	Get_Text = ""
	Text = "T"
'core:	
	URL = PATH & File_Name & ".txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then 
		f = Plugin.File.OpenFile(URL)
		Text = Plugin.File.ReadLine(f)
		Get_Text = Text
		While Text<>""
			Text = Plugin.File.ReadLine(f)
			If (Text <> chr(13))and(Text<>chr(10))and(Text<>"") Then 
				Get_Text = Get_Text & "@" & Text
			End If
		Wend
		Plugin.File.CloseFile f
	End If	
'return:
	File_Read = Get_Text
End Function
/*
-----------------------------------------------------------------------
                Folder_Read: Return  Array()
-----------------------------------------------------------------------
*/
Function Folder_Read(Folder_URL)
'claim:
	Dim i
	Dim Read_File_Name
	
	Read_File_Name = Lib.文件.遍历指定目录下所有文件名(Folder_URL)
/*
	//test code:name from 0 to max-1
	For i = 0 To UBound(Read_File_Name)-1
		MessageBox "Folder File is:"&Read_File_Name(i)
	Next
*/
	Folder_Read = Read_File_Name
End Function


/*
------------------------------------------------------------------------------------
           $$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        $  Core Function is define here:  $
        $        execute codeline         $
           $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
------------------------------------------------------------------------------------
*/
Function Code_Exe(codes)
'claim:
	Dim Code_Array, Code_Len
	Dim x, y, code, time_delay, model
	Dim First_Text,Second_Text,Post_Model
	Dim Err_Code,Pic_Full_Name,x2,y2
'initial:	
	Err_Code = "None" 'no runing codes
	code="None"		'code default is "None"
	Code_Array = split(codes,",")
	Code_Len = UBound(Code_Array)
'core:	
	If (Code_Len > 1) Then 'if codes have exactly three parall;Tips:"="表示等于和赋值
		Err_Code = "UdefineAction"	'Action
		x = Code_Array(0)
		y = Code_Array(1)
		File_Name = y
		code = Code_Array(2)
	End If
	If (Code_Len > 2) Then
		time_delay = Code_Array(3)
		Post_Model = Code_Array(3)
		Call Plugin.Msg.ShowScrTXT(0, 15, 1024, 768, "[  Execute Code:"& code&"     ]", "0000FF")
	End If
	If (Code_Len > 3) Then 
		model = Code_Array(4)
		Call Plugin.Msg.ShowScrTXT(0, 15, 1024, 768, "[  Execute Code:"& code&"     ]", "0000FF")
	End If
	If (Code_Len > 5) Then 
		Pic_Full_Name = Code_Array(3)
		x2 = Code_Array(5)
		y2 = Code_Array(6)
		Call Plugin.Msg.ShowScrTXT(0, 15, 1024, 768, "[  Execute Code:"& code&":"&Pic_Full_Name&" ]", "0000FF")
	End If
	
'trans
	If (Code_Len = 2) Then 
		Goto Three_Line_Codes
	ElseIf (Code_Len = 3) Then
		Goto Four_Line_Codes
	ElseIf (Code_Len > 3) Then
		If (model = "DM") Then 
			If (START = 0) Then 
				Call dm_InitialEx("Bgo 吾妻梨花","Name")
			End If
			Goto Five_Line_Codes
		ElseIf (model = "DM_J") Then
			If (START = 0) Then 
				Call dm_InitialEx("通过键盘调节GPS方位和移动速度","Name")
			End If
			Goto Five_Line_Codes
		Else 
			Goto Four_Line_Codes
		End If
	End If

Rem Three_Line_Codes
	Select Case code
		Case "D", "d"
			Err_Code = myDouble_Click(x, y, 1000)
		Case "C", "c"
			Err_Code = myLeft_Click(x, y, 1000)
		Case "R", "r"
			Err_Code = myRight_Click(x, y, 1000)
		Case "P", "p", "Post", "post"
			Err_Code = dm_PostEx(x, y, Post_Model)
		Case "Execute", "Exe", "execute"
			Call Lib.API.运行程序(x)
			Err_Code ="Action|Execute|"&x
		Case "Conf", "conf", "CONF"
			If (Conf.Exists(y)) Then 
				Conf.Remove (y)
				Conf.Add y, x
			Else 
				Conf.Add y, x
			End If
			//MsgBox "Conf(" & y & ")=" & Conf("PATH")
		Case "Script", "script"
			Err_Code = Script_ExecutorII(y)
		Case "rewriteconf","RConf","RewriteConf","Rewrite_Conf","RC"
			Err_Code = Rewrite_CONF(File_Name)
			
		Case Else

	End Select
	Goto Code_Exe_Ending
	
Rem Four_Line_Codes	
	Select Case code
		Case "D", "d"
			Err_Code = myDouble_Click(x, y, time_delay)
		Case "C", "c"
			Err_Code = myLeft_Click(x, y, time_delay)
		Case "R", "r"
			Err_Code = myRight_Click(x, y, time_delay)
		Case "P", "p", "Post", "post"
			Err_Code = myPostEx(x, y, Post_Model)
		Case "Execute", "Exe", "execute"
			Call Lib.API.运行程序(x)
			Err_Code ="Action|Execute|"&x
		Case "Conf", "conf", "CONF"
			If (Conf.Exists(y)) Then 
				Conf.Remove (y)
				Conf.Add y, x
			Else 
				Conf.Add y, x
			End If
			//MsgBox "Conf(" & y & ")=" & Conf("PATH")
		Case "Script", "script"
			Err_Code = Script_ExecutorII(y)
		Case "rewriteconf","RConf","RewriteConf","Rewrite_Conf","RC"
			Err_Code = Rewrite_CONF(File_Name)
		Case Else
		
	End Select
	Goto Code_Exe_Ending
'DM Model:
Rem Five_Line_Codes	
	Select Case code
		Case "D", "d"
			Err_Code = dm_DoubleClick(x, y, time_delay)
		Case "C", "c"
			Err_Code = dm_LeftClick(x, y, time_delay)
		Case "R", "r"
			Err_Code = dm_RightClick(x, y, time_delay)
		Case "P", "p", "Post", "post"
			//MessageBox "Post_Model=" & Post_Model
			//dm.KeyPress 65
			Err_Code = dm_PostEx(x,y,Post_Model)
		Case "K", "k", "Key"
			'wait a code..
		Case "FindPic"
			Err_Code = dm_FindPicEx(x, y, x2, y2, Pic_Full_Name, FINDPIC_TIMES, "Default")
		Case "FindPicEx"
			Err_Code = dm_FindPicEx(x, y, x2, y2, Pic_Full_Name, FINDPIC_TIMES, "Default")
		Case "FindPicEx_Dynamic"
			Err_Code = dm_FindPicEx(x, y, x2, y2, Pic_Full_Name, FINDPIC_TIMES, "Dynamic")
		Case "FindPicEx_OR"
			Err_Code = dm_FindPicEx(x, y, x2, y2, Pic_Full_Name, FINDPIC_TIMES, "OR")
		Case "Conf", "conf", "CONF"
			If (Conf.Exists(y)) Then 
				Conf.Remove (y)
				Conf.Add y, x
			Else 
				Conf.Add y, x
			End If
			//MsgBox "Conf(" & y & ")=" & Conf("PATH")
		Case "Execute", "Exe", "execute"
			Call Lib.API.运行程序(x)
			Err_Code ="Action|Execute|"&x
		Case "Script", "script"
			Err_Code = Script_ExecutorII(y)
		Case "rewriteconf","RConf","RewriteConf","Rewrite_Conf","RC"
			Err_Code = Rewrite_CONF(File_Name)
		Case Else
			
	End Select
	Goto Code_Exe_Ending
	
Rem Code_Exe_Ending	
'return:
	Call Plugin.Msg.ShowScrTXT(300, 0, 1024, 768, "[ "&Err_Code&" ]", "ADFF2F")
	Code_Exe = Err_Code
End Function

/*
---------------------------- dm_FindPicEx -------------------------------------------
*/
Function dm_FindPicEx(x, y, x2, y2, Pic_Full_Name, Find_Time,Model)
'claim:
	Dim ax, ay, i, j, Err_Code,myArray
	Dim Pics_Num, sim
	Dim Pics_Name		'Such as:1.bmp|2.bmp
	Dim Pics_Array		'Array
	Dim Read_Folder_Name'Array
	Dim x1s,y1s,x2s,y2s	'Array sum as Pics_Array
	Dim Pics_Errs			'Array sum as Pics_Array
	Dim Dynamic_Folder_Name
'initial:
	i = 0
	j = 0
	ax = int((x2 - x) / 2)
	ay = int((y2 - y) / 2)
	sim = 0.9
	Pics_Name = ""
	Err_Code = "NoFound"
	
'Trans and Initial:
	Select Case Model
		Case 0, "0", "Default","Pics"
			Pics_Array = split(Pic_Full_Name, "|")
			Pics_Num = UBound(Pics_Array)				'Pics_Num为下标
			If (Pics_Num > 2) Then 
				sim = 0.8
			End If
			dm_ret = dm.SetPath(dm_PATH & "Pic")'设置:默认图片绝对路径
			Goto dm_FindPicEx_Default_Model
		Case 1, "1", "Dynamic"
			//MessageBox "Dynamic"
			//MsgBox "Pic_Full_Name="&Pic_Full_Name
			myArray = split(Pic_Full_Name, ".")
			Dynamic_Folder_Name = myArray(0)
			//MsgBox "Dynamic_Folder_Name="&Dynamic_Folder_Name
			Folder_URL = dm_PATH & "Pic\" & Dynamic_Folder_Name
			//MsgBox "Folder_URL ="&Folder_URL 
			Read_Folder_Name = Folder_Read(Folder_URL)
			Pics_Num = 0
			Pics_Name = ""
			For i = 0 To UBound(Read_Folder_Name)-1					'spell bug!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
				//MessageBox "Folder File is:" & Read_Folder_Name(i)	'data type bug??????????????????????????????????????????????????????????????
				If (Read_Folder_Name(i) <> "") Then 
					If (i = 0)Then 
						Pics_Name = Read_Folder_Name(i)
						Pics_Num = Pics_Num + 1				'Pics_Num为实际数目
					Else 
						Pics_Name = Pics_Name & "|" & Read_Folder_Name(i)
						Pics_Num = Pics_Num + 1
					End If
				End If
			Next
			//MsgBox "Pics_Name="&Pics_Name&Chr(13)&Chr(10)&"Pics_Num="&Pics_Num
			sim = 0.8
			dm_ret = dm.SetPath(Folder_URL)'设置:默认图片绝对路径:更进一层！
			Goto dm_FindPicEx_Dynamic_Model
		Case 2, "2", "OR", "or"
			Pics_Array = split(Pic_Full_Name, "|")
			x1s = split(x, "|")
			y1s = split(y, "|")
			x2s = split(x2,"|")
			y2s = split(y2, "|")
			Pics_Num = UBound(Pics_Array)					'Pics_Num为下标
			dm_ret = dm.SetPath(dm_PATH & "Pic")'设置:默认图片绝对路径
			Goto dm_FindPicEx_OR_Model
		Case Else
			Goto dm_FindPicEx_Return
	End Select
	
'Model:Default
Rem dm_FindPicEx_Default_Model
	dm_ret = dm.FindPic(x-1,y-1,x2+1,y2+1,Pic_Full_Name,"000000",sim,0,intX,intY)
	If intX >= 0 and intY >= 0 Then 
		Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "Pic Finded:" & Pic_Full_Name, "0000FF")
		If (Pics_Num > 1) Then 
			Err_Code  = "Found" & "|" & "Pics"&"|" & dm_ret
		Else 
			Err_Code  = "Found" & "|" & "Pic"&"|" & "1"
		End If
		dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
		Goto dm_FindPicEx_Return
    Else 
    	If (i < Find_Time) Then 
    		i = i + 1
    		Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[  Pic Find:>> " & i&"th time  ]", "0000FF")
    		Goto dm_FindPicEx_Default_Model
    	Else 
    		If (Pics_Num > 1) Then 
				Err_Code  = "NoFound" & "|" & "Pics"&"|" & Pics_Num
			Else 
				Err_Code  = "NoFound" & "|" & "Pic"&"|" & Pics_Num
			End If
			dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
    		Goto dm_FindPicEx_Return
    	End If
	End If
'Model:Dynamic
Rem dm_FindPicEx_Dynamic_Model
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ FindPic_Dynamic>>" & i & "th" & Pic_Full_Name & " ]", "0000FF")
	//MsgBox "Pics_Name="&Pics_Name
	dm_ret = dm.FindPic(x-1,y-1,x2+1,y2+1,Pics_Name,"000000",sim,0,intX,intY)
	If intX >= 0 and intY >= 0 Then 
		Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "Dynamic Finded:>>" & Pic_Full_Name, "0000FF")
		Err_Code = "Found" & "|" & "Dynamic" & "|" & dm_ret
		//MsgBox "Dynamic Model Success"
		dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
		Goto dm_FindPicEx_Return
    Else 
    	If (i < Find_Time) Then 
    		i = i + 1
    		Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[ Dynamic Pic Find:>> " & i&"th time ]", "0000FF")
    		Goto dm_FindPicEx_Dynamic_Model
    	Else 
    		Err_Code = "NoFound" & "|" & "Dynamic" & "|" & Pics_Num - 1
    		dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
    		Goto dm_FindPicEx_Return
    	End If
	End If
'Model:OR
Rem dm_FindPicEx_OR_Model
	For j = 0 To Pics_Num
		dm_ret = dm.FindPic(x1s(j)-1,y1s(j)-1,x2s(j)+1,y2s(j)+1,Pics_Array(j),"000000",sim,0,intX,intY)
		If intX >= 0 and intY >= 0 Then 
			Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "Pic Finded:" & Pic_Full_Name, "0000FF")
			Err_Code ="Found" & "|" & "OR"&"|" & j	'Remember which one is finded.
			dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
			Goto dm_FindPicEx_Return
		End If
	Next
    If (i < Find_Time) Then 
    	i = i + 1
    	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[  OR Pic Find:>> " & i&"th time  ]", "0000FF")
    	Goto dm_FindPicEx_OR_Model
    Else 
    	Err_Code = "NoFound|OR|" & Pics_Num
    	dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
    	Goto dm_FindPicEx_Return
    End If
    
'return:
Rem dm_FindPicEx_Return
	dm_FindPicEx = Err_Code							'Return is different in Dif Models
End Function
/*
--------------------------  AI PART -----------------------------------------
*/








/*
-----------------------------------------------------------------------------
        Mouse AND Keyboard Function is here:
-----------------------------------------------------------------------------
*/
Function myDouble_Click(x, y, Time)
	Delay Time
	MoveTo x,y
	LeftDoubleClick 1
	myDouble_Click = "Action|D|"&x&","&y&","&Time
End Function
Function dm_DoubleClick(x, y, Time)
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[      Now DoubleClicked   ]", "0000FF")
	dm.MoveTo x, y
	dm.LeftDoubleClick 
	Delay Time
	dm_DoubleClick = "Action|D|"&x&","&y&","&Time
End Function

Function myRight_Click(x, y, Time)
	Delay Time
	MoveTo x,y
	RightClick 1
	myRight_Click = "Action|R|"&x&","&y&","&Time
End Function
Function dm_RightClick(x, y, Time)
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[      Now RightClicked   ]", "0000FF")
	dm.MoveTo x, y
	dm.RightClick 
	Delay Time
	dm_RightClick = "Action|R|"&x&","&y&","&Time
End Function

Function myLeft_Click(x, y, Time)
	Delay Time
	MoveTo x,y
	LeftClick 1
	myLeft_Click = "Action|L|"&x&","&y&","&Time
End Function
Function dm_LeftClick(x, y, Time)
	Dim HalfTime
	HalfTime = int(Time / 2)
	Delay	HalfTime 
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[      Now LeftClicked   ]", "0000FF")
	dm.MoveTo x, y
	dm.LeftClick 
	Delay HalfTime
	dm_LeftClick = "Action|L|"&x&","&y&","&Time
End Function

Function dm_KeyPressStr(Text,Model)
	Dim myText, Code_Array, Code_Len
	Dim Code, vk_code_Array, vk_code_PressTime_Array
	Dim myArray,tempArray
	myText = Text
	Code_Len = Len(Text)
	
'Trans:
	Select Case Model
		Case 0, "0", "Default"
			Goto dm_KeyPressStr_Default_Model
		Case 1, "1", "vk_code", "Vitual_Key_Code"
			Goto dm_KeyPressStr_Vitual_Key_Code_Model
		Case Else
			Goto dm_KeyPressStr_Return
	End Select
'Model:Default
Rem dm_KeyPressStr_Default_Model
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[   dm_KeyPressStr >>Default  ]", "0000FF")
	For i = 48 To 122
		myText = Replace(myText, Chr(i), Chr(i) & ",")
	Next
	//MessageBox "myText="&myText
	Code_Array = split(myText, ",")
	For i = 0 To UBound(Code_Array)
		//dm.KeyPress 65
		Code = Asc(Code_Array(i))
		If (Code > 96) and (Code < 123) Then '输入的是小写
			Code = Code - 32				'转换虚拟码
			Key_State = dm.GetKeyState(20)
			//MsgBox "CAPSLOCK="&Key_State
			If (Key_State = 1) Then 			'如果大写开启
				dm.KeyPress 20 				'关闭它
			End If		
		ElseIf (Code > 64) and (Code < 91) Then
			Key_State = dm.GetKeyState(20)
			If (Key_State = 0) Then 		'如果大写关闭
				dm.KeyPress 20 				'开启它
			End If	
		End If
		dm.KeyPress Code
	Next
	Goto dm_KeyPressStr_Return
'Model:vk_code
Rem dm_KeyPressStr_Vitual_Key_Code_Model
	Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[   dm_KeyPressStr >> vk_code  ]", "0000FF")
	//MsgBox "Text="&Text
	myArray = split(Text, "|")  'such as 12:23|23:23|67:89
	//MsgBox "myArray(0)="&myArray(0)
	For i = 0 To UBound(myArray)
		tempArray = split(myArray(i), ":")
		vk_code_Array(i) = tempArray(0)
		vk_code_PressTime_Array(i) = tempArray(1)
		//MsgBox "tempArray(0)=" & tempArray(0) & Chr(13) & Chr(10) & "tempArray(1)=" & tempArray(1)
		vk_code = int(tempArray(0))			'数据类型不一致，导致许多致命的错误bug.
		presstime = int(tempArray(1))		'特别棘手！！！
		For j = 0 To presstime				'还有拼写错误，初始化问题很容易出bug.
			Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[   dm_KeyPressStr >> press"&Chr(vk_code)&"  ]", "0000FF")
			dm.KeyPress vk_code				'还有中文标点：致命的bug
			Delay 200
		Next
	Next
	/*
	For i = 0 To UBound(myArray)
		For j = 0 To int(vk_code_PressTime_Array(i))
			MessageBox "vk_code_Array(i)="&vk_code_Array(i)
			dm.KeyPress vk_code_Array(i)
			Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "[   dm_KeyPressStr >> vk_code="&vk_code_Array(i)&"  ]", "0000FF")
			Delay 2000
		Next
	Next
	*/
	Goto dm_KeyPressStr_Return
	
'return:
Rem dm_KeyPressStr_Return
	dm_KeyPressStr = "Action|Key|"&Text&","&Model
End Function
'-------------------------------------------------------------------------------------------------------
Function myPostEx(First_Text, Dict_Name, Model)
'claim:
	Dim Read_Text
	Dim Post_Array
	Dim Post_Num
	Dim Post_This_Num	'now is to post nth
'initial:
	Post_Num = int(First_Text)
	Post_This_Num = Post_Num + int(LAST_POST_NUM)
'Trans:	
	Select Case Model
		Case "Dict_Model"
			Goto myPostEx_Dict_Model
		Case "KeyPress_Model","K","KEY","key"
			Goto myPostEx_KeyPress_Model
		Case Else
			Goto myPostEx_Return
	End Select
'Model:Dict_Model
Rem myPostEx_Dict_Model
	Read_Text = File_Read(Dict_Name)
	Post_Array = split(Read_Text, "@")
	SayString Post_Array(Post_This_Num)
	THIS_POST_NUM = THIS_POST_NUM + 1
	Delay 1000
	Goto myPostEx_Return
'Model KeyPress
Rem myPostEx_KeyPress_Model
	//MessageBox "KeyPress Model?"
	//dm.SetClipboard Post_Array(First_Text)
	KeyPress int(Firs_Text),1
	Delay 1000
	Goto myPostEx_Return
'Return:
Rem myPostEx_Return
	myPostEx = "Action|P|"&First_Text&","&Dict_Name&"," &Model
End Function
Function dm_PostEx(First_Text, Dict_Name, Model)
'claim:
	Dim Read_Text
	Dim Post_Array
	Dim Post_Num
	Dim Post_This_Num	'now is to post nth
'initial:
	Post_Num = int(First_Text)
	Post_This_Num = Post_Num + int(LAST_POST_NUM)
	//MsgBox "Post_This_Num=" & Post_This_Num
	//MsgBox "last=" & LAST_POST_NUM
'Trans:	
	Select Case Model
		Case "Dict_Model"
			Goto dm_PostEx_Dict_Model
		Case "KeyPress_Model"
			Goto dm_PostEx_KeyPress_Model
		Case Else
			Goto dm_PostEx_Return
	End Select
'Model:Dict_Model
Rem dm_PostEx_Dict_Model
	Read_Text = File_Read(Dict_Name)
	Post_Array = split(Read_Text, "@")
	//dm.SetClipboard Post_Array(First_Text)
	//MsgBox "Post_This_Num="&Post_This_Num &Chr(13)&Chr(10)&"LAST_POST_NUM="&LAST_POST_NUM
	dm.SendString HANDLE, Post_Array(Post_This_Num)
	THIS_POST_NUM = THIS_POST_NUM + 1
	Delay 1000
	Goto dm_PostEx_Return
'Model:KeyPress_Model eg.8:32|2:32,0,Post,KeyPress_Model,DM
Rem dm_PostEx_KeyPress_Model
	//MessageBox "KeyPress Model?"
	//dm.SetClipboard Post_Array(First_Text)
	Call dm_KeyPressStr(First_Text,"vk_code")
	Delay 1000
	Goto dm_PostEx_Return
'Return:
Rem dm_PostEx_Return
	dm_PostEx = "Action|P|"&First_Text&","&Dict_Name&"," &Model
End Function


Function dm_InitialEx(Window_Name,Model)
'claim:
	Dim Hwnd
'initial:
	set dm = createobject("dm.dmsoft")'创建大漠对象
	PutAttachment dm_PATH,"*.txt" '设置:字典绝对路径
	dm_ret = dm.SetPath(dm_PATH & "Ocr")'设置:默认绝对路径
	dm_ret = dm.SetDict(0, "shadowverse_guofu.txt")'设置:字典位置
	Hwnd = 0
'core:
	Select Case Model
		Case 0, "0", "M", "m", "Mouse", "Mouse_Model", "MOUSE","mouse"
			Goto Mouse_Model
		Case 1, "1", "Name", "name","NAME"
			Goto Name_Model
	End Select

Rem Mouse_Model
	Hwnd = dm.GetMousePointWindow()
	If (Hwnd <> 0) Then 
		Goto dm_Binding
	Else 
		MsgBox "Mouse_Model no work!"
	End If
	Goto dm_Initial_Ending
	
Rem Name_Model
	Hwnd = dm.FindWindow("", Window_Name)
	//MsgBox "..."
	If (Hwnd = 0) Then 
		Call Plugin.Msg.ShowScrTXT(0, 0, 1024, 768, "dm.dll regsvr32 failed", "0000FF")
		Hwnd = Plugin.window.Find(0, Window_Name)  //然后利用按键的锁定窗口找到句柄
		Goto Name_Model
	End If
	If (Hwnd <> 0) Then 
		Goto dm_Binding
	Else 
	'-----------------------------------------------------------------------------------------########
		Goto Name_Model																		'|#Modify#
	'-----------------------------------------------------------------------------------------########
	End If
	Goto dm_Initial_Ending

Rem dm_Binding
    Call Plugin.window.Move(Hwnd, 0, 0)
    dm.DmGuard 1, "np"   //大漠的绑定模式
    dm_ret = dm.BindWindow(Hwnd, "dx2", "windows", "windows", 0)
    Goto dm_Initial_Ending
 /*
 -----------------------------------------------------------------------------------------------------
 			以上为使用大漠插件必经途径： 
 			1.查找句柄
 			2.绑定大漠插件对象
 -----------------------------------------------------------------------------------------------------
 */
 
 'return:
 Rem dm_Initial_Ending
 If (Hwnd <> 0) Then 
 	START=1 'now dm.dll is running
 	//MsgBox "dm bind successful"
 	HANDLE = Hwnd
 	dm_InitialEx = 1
 Else 
 	//MsgBox "dm bind Failed."
 	dm_InitialEx = 0
 End If
End Function
/*
--------------------------------  IsNameUsedEx .txt Files  ------------------------------------------
*/
Function IsNameUsedEx(File_Name,Model)
'claim:
	Dim URL
	Dim Num
	Dim i, j
'initial:	
	Num=""
	i = 0
'Core or Trans:	
Rem Finding
	Select Case Model
		Case 0, "0", "Default", "TXT"
			URL = PATH & File_Name & Num & ".txt"
		Case "P", "Pic", "pic", "Picture"
			URL = PATH & "damo\Pic\" & File_Name & Num & ".bmp"
		Case Else
			//MessageBox "Err:Not Design Model!"&chr(13)&chr(10)&"Tips:You Should add this to IsNameUsedEx Func."
			Goto IsNameUsedEx_Return
	End Select
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then 
		j = int(i / 10)
		Num = Cstr(j) & Cstr(i Mod 10)
		i = i + 1
		Goto Finding
	Else 
		Goto IsNameUsedEx_Return
	End If	
'return:	
Rem IsNameUsedEx_Return
	IsNameUsedEx = Num
End Function
//获取目录下：文件名 complete
Function File_SaveEx(File_Name, String_Data, Model)
'claim;
	Dim label
	Dim Num
'initial:
	label=0	//when write failed return 0,else return 1
	//Msgbox "start open.."&URL
	
	Select Case Model
		Case 0, "0", "Default"
			Goto File_SaveEx_Default_Model
		Case "New", "new"
			Goto File_SaveEx_New_Model
		Case "Create", "create"
			Goto File_SaveEx_Create_Model
		Case "Rewrite", "rewrite"
			Goto File_SaveEx_Rewrite_Model
	End Select
'Model:Default
Rem File_SaveEx_Default_Model
	Num = IsNameUsedEx(File_Name,"TXT")
	URL = PATH & File_Name & Num &".txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then
		f = Plugin.File.OpenFile(URL)
		Call Plugin.File.WriteFile(f,String_Data)
		Plugin.File.CloseFile f
		//MsgBox "HAVE SAVE IN OLD FILE:"&URL
		label = 1
	Else 
		f = Plugin.File.OpenFile(URL)
		Call Plugin.File.WriteFile(f,String_Data)
		Plugin.File.CloseFile f
		//MsgBox "HAVE SAVE IN NEW FILE:"&URL
		label = 1
	End If
	Goto File_SaveEx_Return
'Model:New	
Rem File_SaveEx_New_Model	
	Num = IsNameUsedEx(File_Name,"TXT")
	URL = PATH & File_Name & Num &".txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then
		//MessageBox "Tips:You Func IsNameUsedEx is Go Wrong."
	Else 
		f = Plugin.File.OpenFile(URL)
		Call Plugin.File.WriteFile(f,String_Data)
		Plugin.File.CloseFile f
	//	MsgBox "HAVE SAVE IN:"&URL
		label = 1
	End If
	Goto File_SaveEx_Return
'Model:Create
Rem File_SaveEx_Create_Model	
	Num = IsNameUsedEx(File_Name,"TXT")
	URL = PATH & File_Name & Num &".txt"
	FileExist = Plugin.File.IsFileExist(URL)
	If FileExist Then
	//	MessageBox "FILE IS EXIST."
		label = 1
	Else 
		f = Plugin.File.OpenFile(URL)
		Call Plugin.File.WriteFile(f,String_Data)
		Plugin.File.CloseFile f
	//	MsgBox "HAVE CREATED:"&URL
		label = 1
	End If
	Goto File_SaveEx_Return
'Model:Rewrite
Rem File_SaveEx_Rewrite_Model
	URL = PATH & File_Name & ".txt"
	f = Plugin.File.OpenFile(URL)
	Call Plugin.File.WriteFile(f,String_Data)
	Plugin.File.CloseFile f
	//MsgBox "Script Runing Data is Save in Conf"
	Goto File_SaveEx_Return	
'return:
Rem File_SaveEx_Return
	File_SaveEx = label
End Function
/*
--------------------------------  dm_Regsvr32()      ------------------------------------------
*/
Function dm_Regsvr32()

// 这个need_ver作为本脚本需要使用的插件版本. 如果要换插件时，记得更改这个值.
need_ver = "3.1233"
 

// 插件需要用到atl系统库,有些XP精简系统会把atl.dll精简掉. 为了防止注册失败，这里手动注册一下atl.dll
set ws=createobject("Wscript.Shell")
ws.run "regsvr32 atl.dll /s"
set ws=nothing

 
// 释放附件>>>>>>>>>>>>>>>>>>>
// 这里选择c盘的test-_game作为插件的基本目录 也就是SetPath对应的目录。所以所有资源都释放在此目录.
PutAttachment "c:\test_game","*.*"
// 这里要用到RegDll来注册插件，所以必须释放到Plugin. 但是切记不能把dm.dll释放到Plugin.那会导致插件失效.
PutAttachment ".\Plugin" ,"RegDll.dll"


// 插件注册开始>>>>>>>>>>>>>>>>>>>
// 下面开始注册插件,先尝试用RegDll来注册.这里必须使用绝对路径。以免有别人把dm.dll释放在系统目录.造成版本错误.
Call Plugin.RegDll.Reg("c:\test_game\dm.dll") 
// 这里判断是否注册成功
set dm = createobject("dm.dmsoft")
ver = dm.Ver()
if ver <> need_ver then
// 先释放先前创建的dm
set dm = nothing
   // 再尝试用regsvr32 来注册. 这里必须使用绝对路径。以免有别人把dm.dll释放在系统目录.造成版本错误.
set ws=createobject("Wscript.Shell")
ws.run "regsvr32 c:\test_game\dm.dll /s"
set ws=nothing
Delay 1500  
// 再判断插件是否注册成功
set dm = createobject("dm.dmsoft")
ver = dm.Ver()
if ver <> need_ver then
// 这时，已经确认插件注册失败了。 弹出一些调试信息，以供分析.
messagebox "插件版本错误,当前使用的版本是:"&ver&",插件所在目录是:"&dm.GetBasePath()
messagebox "请关闭程序,重新打开本程序再尝试"
    endscript
  end if
end if
// 插件注册结束<<<<<<<<<<<<<<<
End Function

Function mySplitEx(String_Data, str1, Model_or_Complex, Num_or_String)	'mySplit("a|b|c|d","|","B",1) 返回倒三角字串第一位		
	Dim myArray									'eg."B"a|b|c|d    则返回:b|c|d   第二位c|d  第三位 d  超出返回 0
	Dim Err, Num								'eg."F"正三角模式   则返回:a  a|b  a|b|c  a|b|c|d  表示0-3位 Error:超出返回 0
	Dim Len, i, Insert_Len								'eg."G"取点模式 返回指定点的值
	Dim Text									'eg."I"插入模式  mySplit("23,34,D,234,DM", ",", "|23","Insert" ,1) 
	Dim Model,split_char,Insert_string	'eg.  23|23,34,D,234,DM 同格式字符串,同体插入
	Dim Insert_Rules(100)

'initial:										'eg.  23|23,34,D,234,DM
	Num = Num_or_String
	Insert_string = Num_or_String	'insert 分割符默认为"|"
	Model = Model_or_Complex
	Complex = Model_or_Complex
	split_char = str1			'split 分割符
	Text = ""
	Err = 0
	i = 0
	myArray = split(String_Data, split_char)
	Len = UBound(myArray)
	For i = 0 To Len
		Insert_Rules(i) = "I"	'默认同体插入
	Next
'Trans:
Rem mySplit_Trans
	Select Case Model
		Case "b", "B", "back", "Back"
			Goto mySplit_Back_Model
		Case "f", "F", "first", "First"
			Goto mySplit_First_Model
		Case "g", "G", "get", "Get"
			Goto mySplit_Get_Model
		Case "i", "I", "insert", "Insert"
			Goto mySplit_Insert_Model
		Case Else	'类似正则表达式
			Goto mySplit_Complex
	End Select
'Model:Back
Rem mySplit_Back_Model
	If (Num > Len) Then 
		Err = 0
		Goto mySplit_Return
	Else 
		If (Num > 0) Then 
			If (Num < Len) Then 
				Text = myArray(Num)
				For i = Num+1 To Len
					Text=Text&split_char &myArray(i)
				Next
				Err = Text
			Else 
				Err = myArray(Len)
			End If
		Else 
			Err = String_Data
		End If
	End If
	Goto mySplit_Return
'Model:First
Rem mySplit_First_Model
	If (Num > Len) Then 
		Err = 0
		Goto mySplit_Return
	Else 
		If (Num > 0) Then 
			If (Num < Len) Then 
				Text = myArray(0)
				For i = 1 To Num
					Text = Text & split_char & myArray(i)	
				Next
				Err = Text
			Else 
				Err = String_Data
			End If
		Else 
			Err = myArray(0)
		End If
	End If
	Goto mySplit_Return
'Model:Get
Rem mySplit_Get_Model
	If (Num > Len) Then 
		Err = 0
		Goto mySplit_Return
	Else 
		Err = myArray(Num)	
	End If
	Goto mySplit_Return
'Model:Insert
Rem mySplit_Insert_Model
	Insert_string = split(Num_or_String, split_char)
	Insert_Len = UBound(Insert_string)
	Text = ""
	Short_Len = Len
	If (Insert_Len < Len) Then 
		Short_Len = Insert_Len
	End If
	For i = 0 To Len
		If (i > Short_Len) Then 
			If (i = 0) Then 
				Text = myArray(i)
			Else 
				Text = Text &split_char &myArray(i)
			End If
		Else 
			myArray(i) = myArray(i) & "|" & Insert_string(i)	'Insert
			If (i = 0) Then 
				Text = myArray(i)
			Else 
				Text = Text &split_char &myArray(i)
			End If
		End If	
	Next
	Err = Text	
	Goto mySplit_Return
'Model:Complex>>trans:
Rem mySplit_Complex
	Rules_Len = 0
	For i = 48 To 122
		Model_or_Complex = Replace(Model_or_Complex, Chr(i),Chr(i)&",") 'Replace 使用要点:Chr(i)i=48-122,必须使用","分割！否则出错
	Next
	Rules_string = split(Model_or_Complex, ",")
	Rules_Len = UBound(Rules_string)
	Insert_string = split(Insert_string, split_char)					'按键精灵变量可以自行转换
	Insert_Len = UBound(Insert_string)
	Text = ""
	Short_Len = Len
	If (Insert_Len < Len) Then 
		Short_Len = Insert_Len
	End If
	If (Rules_Len < Len) Then 
		Short_Len = Rules_Len
	End If
	For i = 0 To Len
		If (i > Short_Len) Then 							'beyond the rule
			If (i = 0) Then 
				Text = myArray(i)
			Else 
				Text = Text &split_char &myArray(i)
			End If
		Else 												'in the rules
			If (Rules_string(i) = "I") Then 
				If (i = 0) Then 
					Text = myArray(i)& "|" & Insert_string(i)
				Else 
					Text = Text & split_char & myArray(i) & "|" & Insert_string(i)	'Insert
				End If
			ElseIf (Rules_string(i) = "X")Then
				If (i = 0) Then 
					Text = myArray(i)
				Else 
					Text = Text & split_char & myArray(i) 
				End If
			End If
		End If	
	Next
	Err = Text
	Goto mySplit_Return
'return:
Rem mySplit_Return
	mySplitEx = Err
End Function

Function DNA_Control(DNA, Model, Virus)	'DNA eg, Sum|2,4 Sum is DNA_Top 2,4 is DNA Body 2,3|2,5
	Dim DNA_Key		'DNA key is in START of DNA_Top,Must be Number
	Dim DNA_Top, DNA_End
	Dim DNA_Top_Members
	Dim DNA_Top_Except_Key
	Dim DNA_Body_Except_End
	Dim DNA_Body
	Dim DNA_Body_Members
	Dim myArray,pos
	Dim IsDNA
	Dim Message		'return message
'initial:	
	Dim DNA_Type(10), DNA_Type_Num		'DNA_Type <<add
'-------------------------------------
	DNA_Type = "<Unlimit>"			'|
	DNA_Type = "<BreakUp>"			'|
	DNA_Type = "FindPic"			'|
	DNA_Type = "<Quick>"			'|
	DNA_Type_Num = 4				'|
'-------------------------------------	
	Message = DNA	'Default Return Former DNA
	myArray = split(DNA, "|")
	DNA_Top = myArray(0)	'Suppose DNA_Top is a Num
	DNA_Body = myArray(1)
	DNA_Body_Members = split(DNA_Body, ",")
	//MsgBox "UBound(DNA_Body_Members)=" & UBound(DNA_Body_Members)
	DNA_Body_Except_End = ""
	If (UBound(DNA_Body_Members) > 0) Then 
		For i = 0 To UBound(DNA_Body_Members) - 1
			If (i = 0) Then 
				DNA_Body_Except_End = DNA_Body_Members(i)
			Else 
				DNA_Body_Except_End = DNA_Body_Except_End & ","&DNA_Body_Members(i)
			End If	
		Next
	End If
	DNA_End = DNA_Body_Members(UBound(DNA_Body_Members))
	DNA_Top_Members = split(DNA_Top, ",")
	//MsgBox "DNA TOP MEM="&UBound(DNA_Top_Members)
	DNA_Top_Except_Key = ""
	If (UBound(DNA_Top_Members) > 0) Then 
		For i = 1 To UBound(DNA_Top_Members)
			If (i = 1) Then 
				DNA_Top_Except_Key = DNA_Top_Members(i)
			Else 
				DNA_Top_Except_Key = DNA_Top_Except_Key & "," &DNA_Top_Members(i)
			End If
			
		Next
	End If
	DNA_Key = DNA_Top_Members(0)
'vertify
	If (int(UBound(DNA_Top_Members)) = 0) and (int(DNA_Key) = int(UBound(DNA_Body_Members)) + 1) Then '+1 label is from 0 to ...
		IsDNA = True
	Else 
		IsDNA = False
	End If
'Trans: DNA Control ######################################################
	Select Case Model													'#
		Case "Add"														'#
			Goto DNA_Control_Add_Model									'#
		Case "Insert"													'#
			Goto DNA_Control_Insert_Model								'#################################
		Case "Update"													'#  You Can Add more Codes Here  #
			Goto DNA_Control_Update_Model								'#################################
		Case "Read","Get","read","get"									'#
			Goto DNA_Control_Read_Model									'#
		Case "Replace"													'#
			Goto DNA_Control_Replace_Model								'#
		Case "Remember", "RememberMe"									'#
			Goto DNA_Control_Remember_Model								'#
		Case "Show_DNA_Message"											'#
			Goto DNA_Control_ShowMessage_Model							'#<<add
		Case "ShowType"
			Goto DNA_Control_ShowType_Model
	End Select '##########################################################
'Model:Add
Rem DNA_Control_Add_Model			'Suppose Add Virus is like this 123,without Destory Symbel "|" and ",".
	DNA_Key = int(DNA_Key) + 1
	If (DNA_Top_Except_Key <> "") Then 
		Message = DNA_Key &"," & DNA_Top_Except_Key & "|" & DNA_Body &"," & Virus
	Else 
		Message = DNA_Key & "|" & DNA_Body & "," & Virus
	End If
	Goto DNA_Control_Return
'Model:Insert--------------------------------Only add to the end----------------------
Rem DNA_Control_Insert_Model
	If (DNA_Body = "") Then 
		Message = DNA_Top & "|"  & Virus
	Else 
		Message = DNA_Top & "|" & DNA_Body & "," & Virus
	End If
	
	Goto DNA_Control_Return
'Model:Update
Rem DNA_Control_Update_Model
	If (DNA_Body_Except_End <> "") Then 
		Message = DNA_Top & "|" & DNA_Body_Except_End &"," & Virus
	Else 
		Message = DNA_Top &"|" &Virus
	End If
	Goto DNA_Control_Return
'Model:Read
Rem DNA_Control_Read_Model
	Select Case Virus
		Case "Top","top"
			Message = DNA_Top
		Case "Body","body"
			Message = DNA_Body
		Case "Key", "key"
			Message = int(DNA_Key)
			If (Message = "") Then 
				MsgBox "Err:You Try to Get a Number,But String."
			End If
		Case "Name", "Main", "name", "main"
			Message = DNA_Key
		Case "KeyValue", "KV"
			Message = DNA_Body_Members(DNA_Key - 1)
		Case "End"
			Message = DNA_End
		Case Else
			
	End Select
 	Goto DNA_Control_Return
 'Model:Replace
 Rem DNA_Control_Replace_Model					'When accont to Replace: Virus is suppose as DNA????????????????????????????
 	Dim RNA_Key,RNA_End
 	RNA_Key = DNA_Control(Virus, "Read", "Name")
 	RNA_End = DNA_Control(Virus, "Read", "End")
 	Select Case RNA_Key
		Case "Top", "top"
			Message = RNA_End&"|"&DNA_Body
		Case "Body","body"
			Message = DNA_Top&"|"&RNA_End
		Case "Key", "key","Name", "Main", "name", "main"
			If (DNA_Top_Except_Key = "") Then 
				Message = RNA_End & "|" & DNA_Body
			Else 
				Message = RNA_End&","&DNA_Top_Except_Key&"|"&DNA_Body
			End If
		Case Else								'suppose is number
			
	End Select
 	Goto DNA_Control_Return
 'Model:Remember
 Rem DNA_Control_Remember_Model
 	pos = InStr(DNA_Body, Virus)							'变量名与字符混淆BUG！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！
 	If (pos <> "Null") Then 
 		If (pos > 0) Then 
 			Message = True
 		Else 
 			Message = False
 		End If
 	Else 
 		MsgBox "Error:NoBody is Available!"
 	End If
 	Goto DNA_Control_Return
 'Model:ShowMessage
 Rem DNA_Control_ShowMessage_Model
 	If IsDNA Then 
 		MsgBox "Is DNA:" & DNA & Chr(13) & Chr(10) & "=" &"["& DNA_Top &"|" & DNA_Body &"]"& Chr(13) & Chr(10)&"[<"&DNA_Key&">{"&DNA_Top_Except_Key&"}|{"&DNA_Body_Except_End&"}<"& DNA_End&">]"
	Else 
		MsgBox "You Are Virus:" & DNA & Chr(13) & Chr(10) & "=" &"["& DNA_Top &"|" & DNA_Body &"]"& Chr(13) & Chr(10)&"[<"&DNA_Key&">{"&DNA_Top_Except_Key&"}|{"&DNA_Body_Except_End&"}<"& DNA_End&">]"
	
	End If
 	Goto DNA_Control_Return
 'Model:ShowType <<add
 Rem DNA_Control_ShowType_Model
 	Select Case Virus
		Case "Body", "body"
		Case Else
			
	End Select
 	Goto DNA_Control_Return
'return:
Rem DNA_Control_Return
	DNA_Control = Message
End Function
